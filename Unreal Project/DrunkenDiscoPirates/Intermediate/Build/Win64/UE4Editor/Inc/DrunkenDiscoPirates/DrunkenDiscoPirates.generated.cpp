// Copyright 1998-2017 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "GeneratedCppIncludes.h"
#include "DrunkenDiscoPirates.h"
#include "DrunkenDiscoPirates.generated.dep.h"
PRAGMA_DISABLE_OPTIMIZATION
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCode1DrunkenDiscoPirates() {}
FName DRUNKENDISCOPIRATES_DamagedFallback = FName(TEXT("DamagedFallback"));
FName DRUNKENDISCOPIRATES_SetFlipbooks = FName(TEXT("SetFlipbooks"));
	void ACamera::StaticRegisterNativesACamera()
	{
	}
	IMPLEMENT_CLASS(ACamera, 2509188529);
	void UDDPGameInstance::StaticRegisterNativesUDDPGameInstance()
	{
		FNativeFunctionRegistrar::RegisterFunction(UDDPGameInstance::StaticClass(), "GetPlayerCount",(Native)&UDDPGameInstance::execGetPlayerCount);
		FNativeFunctionRegistrar::RegisterFunction(UDDPGameInstance::StaticClass(), "SetPlayerCount",(Native)&UDDPGameInstance::execSetPlayerCount);
	}
	IMPLEMENT_CLASS(UDDPGameInstance, 2558690490);
	void ARumBottle::StaticRegisterNativesARumBottle()
	{
	}
	IMPLEMENT_CLASS(ARumBottle, 1251593454);
static class UEnum* States_StaticEnum()
{
	extern DRUNKENDISCOPIRATES_API class UPackage* Z_Construct_UPackage__Script_DrunkenDiscoPirates();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern DRUNKENDISCOPIRATES_API class UEnum* Z_Construct_UEnum_DrunkenDiscoPirates_States();
		Singleton = GetStaticEnum(Z_Construct_UEnum_DrunkenDiscoPirates_States, Z_Construct_UPackage__Script_DrunkenDiscoPirates(), TEXT("States"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_States(States_StaticEnum, TEXT("/Script/DrunkenDiscoPirates"), TEXT("States"), false, nullptr, nullptr);
	void ADiscoPirate::DamagedFallback(AActor* attackingPirate)
	{
		DiscoPirate_eventDamagedFallback_Parms Parms;
		Parms.attackingPirate=attackingPirate;
		ProcessEvent(FindFunctionChecked(DRUNKENDISCOPIRATES_DamagedFallback),&Parms);
	}
	void ADiscoPirate::SetFlipbooks(int32 playerIndex)
	{
		DiscoPirate_eventSetFlipbooks_Parms Parms;
		Parms.playerIndex=playerIndex;
		ProcessEvent(FindFunctionChecked(DRUNKENDISCOPIRATES_SetFlipbooks),&Parms);
	}
	void ADiscoPirate::StaticRegisterNativesADiscoPirate()
	{
		FNativeFunctionRegistrar::RegisterFunction(ADiscoPirate::StaticClass(), "Attack",(Native)&ADiscoPirate::execAttack);
		FNativeFunctionRegistrar::RegisterFunction(ADiscoPirate::StaticClass(), "InitiateAttack",(Native)&ADiscoPirate::execInitiateAttack);
		FNativeFunctionRegistrar::RegisterFunction(ADiscoPirate::StaticClass(), "InitiateJump",(Native)&ADiscoPirate::execInitiateJump);
		FNativeFunctionRegistrar::RegisterFunction(ADiscoPirate::StaticClass(), "MoveVertical",(Native)&ADiscoPirate::execMoveVertical);
		FNativeFunctionRegistrar::RegisterFunction(ADiscoPirate::StaticClass(), "OnAnimationFinished",(Native)&ADiscoPirate::execOnAnimationFinished);
		FNativeFunctionRegistrar::RegisterFunction(ADiscoPirate::StaticClass(), "OnBeginOverlap",(Native)&ADiscoPirate::execOnBeginOverlap);
		FNativeFunctionRegistrar::RegisterFunction(ADiscoPirate::StaticClass(), "OnEndOverlap",(Native)&ADiscoPirate::execOnEndOverlap);
		FNativeFunctionRegistrar::RegisterFunction(ADiscoPirate::StaticClass(), "OnKlunkAudioFinished",(Native)&ADiscoPirate::execOnKlunkAudioFinished);
		FNativeFunctionRegistrar::RegisterFunction(ADiscoPirate::StaticClass(), "OnPickupBottleAudioFinished",(Native)&ADiscoPirate::execOnPickupBottleAudioFinished);
		FNativeFunctionRegistrar::RegisterFunction(ADiscoPirate::StaticClass(), "PickUpRum",(Native)&ADiscoPirate::execPickUpRum);
		FNativeFunctionRegistrar::RegisterFunction(ADiscoPirate::StaticClass(), "SetFlipbooksImplementation",(Native)&ADiscoPirate::execSetFlipbooksImplementation);
	}
	IMPLEMENT_CLASS(ADiscoPirate, 1900825474);
	void ADDPGameMode::StaticRegisterNativesADDPGameMode()
	{
		FNativeFunctionRegistrar::RegisterFunction(ADDPGameMode::StaticClass(), "CreatePlayers",(Native)&ADDPGameMode::execCreatePlayers);
	}
	IMPLEMENT_CLASS(ADDPGameMode, 934454234);
	void ADrunkenDiscoPiratesGameModeBase::StaticRegisterNativesADrunkenDiscoPiratesGameModeBase()
	{
	}
	IMPLEMENT_CLASS(ADrunkenDiscoPiratesGameModeBase, 3310742047);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	ENGINE_API class UClass* Z_Construct_UClass_APawn();
	ENGINE_API class UClass* Z_Construct_UClass_UCameraComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UGameInstance();
	ENGINE_API class UClass* Z_Construct_UClass_AActor();
	PAPER2D_API class UClass* Z_Construct_UClass_UPaperFlipbookComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UCapsuleComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AActor_NoRegister();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FHitResult();
	ENGINE_API class UClass* Z_Construct_UClass_UPrimitiveComponent_NoRegister();
	PAPER2D_API class UClass* Z_Construct_UClass_UPaperFlipbook_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ACharacter();
	ENGINE_API class UClass* Z_Construct_UClass_USoundBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UBoxComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AGameMode();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FTransform();
	ENGINE_API class UClass* Z_Construct_UClass_AGameModeBase();

	DRUNKENDISCOPIRATES_API class UClass* Z_Construct_UClass_ACamera_NoRegister();
	DRUNKENDISCOPIRATES_API class UClass* Z_Construct_UClass_ACamera();
	DRUNKENDISCOPIRATES_API class UFunction* Z_Construct_UFunction_UDDPGameInstance_GetPlayerCount();
	DRUNKENDISCOPIRATES_API class UFunction* Z_Construct_UFunction_UDDPGameInstance_SetPlayerCount();
	DRUNKENDISCOPIRATES_API class UClass* Z_Construct_UClass_UDDPGameInstance_NoRegister();
	DRUNKENDISCOPIRATES_API class UClass* Z_Construct_UClass_UDDPGameInstance();
	DRUNKENDISCOPIRATES_API class UClass* Z_Construct_UClass_ARumBottle_NoRegister();
	DRUNKENDISCOPIRATES_API class UClass* Z_Construct_UClass_ARumBottle();
	DRUNKENDISCOPIRATES_API class UEnum* Z_Construct_UEnum_DrunkenDiscoPirates_States();
	DRUNKENDISCOPIRATES_API class UFunction* Z_Construct_UFunction_ADiscoPirate_Attack();
	DRUNKENDISCOPIRATES_API class UFunction* Z_Construct_UFunction_ADiscoPirate_DamagedFallback();
	DRUNKENDISCOPIRATES_API class UFunction* Z_Construct_UFunction_ADiscoPirate_InitiateAttack();
	DRUNKENDISCOPIRATES_API class UFunction* Z_Construct_UFunction_ADiscoPirate_InitiateJump();
	DRUNKENDISCOPIRATES_API class UFunction* Z_Construct_UFunction_ADiscoPirate_MoveVertical();
	DRUNKENDISCOPIRATES_API class UFunction* Z_Construct_UFunction_ADiscoPirate_OnAnimationFinished();
	DRUNKENDISCOPIRATES_API class UFunction* Z_Construct_UFunction_ADiscoPirate_OnBeginOverlap();
	DRUNKENDISCOPIRATES_API class UFunction* Z_Construct_UFunction_ADiscoPirate_OnEndOverlap();
	DRUNKENDISCOPIRATES_API class UFunction* Z_Construct_UFunction_ADiscoPirate_OnKlunkAudioFinished();
	DRUNKENDISCOPIRATES_API class UFunction* Z_Construct_UFunction_ADiscoPirate_OnPickupBottleAudioFinished();
	DRUNKENDISCOPIRATES_API class UFunction* Z_Construct_UFunction_ADiscoPirate_PickUpRum();
	DRUNKENDISCOPIRATES_API class UFunction* Z_Construct_UFunction_ADiscoPirate_SetFlipbooks();
	DRUNKENDISCOPIRATES_API class UFunction* Z_Construct_UFunction_ADiscoPirate_SetFlipbooksImplementation();
	DRUNKENDISCOPIRATES_API class UClass* Z_Construct_UClass_ADiscoPirate_NoRegister();
	DRUNKENDISCOPIRATES_API class UClass* Z_Construct_UClass_ADiscoPirate();
	DRUNKENDISCOPIRATES_API class UFunction* Z_Construct_UFunction_ADDPGameMode_CreatePlayers();
	DRUNKENDISCOPIRATES_API class UClass* Z_Construct_UClass_ADDPGameMode_NoRegister();
	DRUNKENDISCOPIRATES_API class UClass* Z_Construct_UClass_ADDPGameMode();
	DRUNKENDISCOPIRATES_API class UClass* Z_Construct_UClass_ADrunkenDiscoPiratesGameModeBase_NoRegister();
	DRUNKENDISCOPIRATES_API class UClass* Z_Construct_UClass_ADrunkenDiscoPiratesGameModeBase();
	DRUNKENDISCOPIRATES_API class UPackage* Z_Construct_UPackage__Script_DrunkenDiscoPirates();
	UClass* Z_Construct_UClass_ACamera_NoRegister()
	{
		return ACamera::StaticClass();
	}
	UClass* Z_Construct_UClass_ACamera()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_APawn();
			Z_Construct_UPackage__Script_DrunkenDiscoPirates();
			OuterClass = ACamera::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_camera = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("camera"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(camera, ACamera), 0x00400000000a001d, Z_Construct_UClass_UCameraComponent_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Navigation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Camera.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Camera.h"));
				MetaData->SetValue(NewProp_camera, TEXT("AllowPrivateAccess"), TEXT("TRUE"));
				MetaData->SetValue(NewProp_camera, TEXT("Category"), TEXT("Components"));
				MetaData->SetValue(NewProp_camera, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_camera, TEXT("ModuleRelativePath"), TEXT("Camera.h"));
				MetaData->SetValue(NewProp_camera, TEXT("ToolTip"), TEXT("The camera component."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ACamera(Z_Construct_UClass_ACamera, &ACamera::StaticClass, TEXT("ACamera"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(ACamera);
	UFunction* Z_Construct_UFunction_UDDPGameInstance_GetPlayerCount()
	{
		struct DDPGameInstance_eventGetPlayerCount_Parms
		{
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UDDPGameInstance();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetPlayerCount"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(DDPGameInstance_eventGetPlayerCount_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, DDPGameInstance_eventGetPlayerCount_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Code"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("DDPGameInstance.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get the number of players."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UDDPGameInstance_SetPlayerCount()
	{
		struct DDPGameInstance_eventSetPlayerCount_Parms
		{
			int32 newPlayerCount;
		};
		UObject* Outer=Z_Construct_UClass_UDDPGameInstance();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetPlayerCount"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(DDPGameInstance_eventSetPlayerCount_Parms));
			UProperty* NewProp_newPlayerCount = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("newPlayerCount"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(newPlayerCount, DDPGameInstance_eventSetPlayerCount_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Code"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("DDPGameInstance.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Set the number of players."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UDDPGameInstance_NoRegister()
	{
		return UDDPGameInstance::StaticClass();
	}
	UClass* Z_Construct_UClass_UDDPGameInstance()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UGameInstance();
			Z_Construct_UPackage__Script_DrunkenDiscoPirates();
			OuterClass = UDDPGameInstance::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100088;

				OuterClass->LinkChild(Z_Construct_UFunction_UDDPGameInstance_GetPlayerCount());
				OuterClass->LinkChild(Z_Construct_UFunction_UDDPGameInstance_SetPlayerCount());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UDDPGameInstance_GetPlayerCount(), "GetPlayerCount"); // 3484146530
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UDDPGameInstance_SetPlayerCount(), "SetPlayerCount"); // 3369177303
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("DDPGameInstance.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("DDPGameInstance.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UDDPGameInstance(Z_Construct_UClass_UDDPGameInstance, &UDDPGameInstance::StaticClass, TEXT("UDDPGameInstance"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UDDPGameInstance);
	UClass* Z_Construct_UClass_ARumBottle_NoRegister()
	{
		return ARumBottle::StaticClass();
	}
	UClass* Z_Construct_UClass_ARumBottle()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_DrunkenDiscoPirates();
			OuterClass = ARumBottle::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_levelZBoundary = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("levelZBoundary"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(levelZBoundary, ARumBottle), 0x0020080000000015);
				UProperty* NewProp_levelYBoundary = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("levelYBoundary"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(levelYBoundary, ARumBottle), 0x0020080000000015);
				UProperty* NewProp_rumFlipbook = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("rumFlipbook"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(rumFlipbook, ARumBottle), 0x00400000000a001d, Z_Construct_UClass_UPaperFlipbookComponent_NoRegister());
				UProperty* NewProp_capsuleCollision = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("capsuleCollision"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(capsuleCollision, ARumBottle), 0x00400000000a001d, Z_Construct_UClass_UCapsuleComponent_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("RumBottle.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("RumBottle.h"));
				MetaData->SetValue(NewProp_levelZBoundary, TEXT("Category"), TEXT("Code"));
				MetaData->SetValue(NewProp_levelZBoundary, TEXT("ModuleRelativePath"), TEXT("RumBottle.h"));
				MetaData->SetValue(NewProp_levelZBoundary, TEXT("ToolTip"), TEXT("The level Z boundary."));
				MetaData->SetValue(NewProp_levelYBoundary, TEXT("Category"), TEXT("Code"));
				MetaData->SetValue(NewProp_levelYBoundary, TEXT("ModuleRelativePath"), TEXT("RumBottle.h"));
				MetaData->SetValue(NewProp_levelYBoundary, TEXT("ToolTip"), TEXT("The level Y boundary."));
				MetaData->SetValue(NewProp_rumFlipbook, TEXT("AllowPrivateAccess"), TEXT("TRUE"));
				MetaData->SetValue(NewProp_rumFlipbook, TEXT("Category"), TEXT("Components"));
				MetaData->SetValue(NewProp_rumFlipbook, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_rumFlipbook, TEXT("ModuleRelativePath"), TEXT("RumBottle.h"));
				MetaData->SetValue(NewProp_rumFlipbook, TEXT("ToolTip"), TEXT("The rum bottle flipbook component."));
				MetaData->SetValue(NewProp_capsuleCollision, TEXT("AllowPrivateAccess"), TEXT("TRUE"));
				MetaData->SetValue(NewProp_capsuleCollision, TEXT("Category"), TEXT("Components"));
				MetaData->SetValue(NewProp_capsuleCollision, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_capsuleCollision, TEXT("ModuleRelativePath"), TEXT("RumBottle.h"));
				MetaData->SetValue(NewProp_capsuleCollision, TEXT("ToolTip"), TEXT("The capsule collision component."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ARumBottle(Z_Construct_UClass_ARumBottle, &ARumBottle::StaticClass, TEXT("ARumBottle"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(ARumBottle);
	UEnum* Z_Construct_UEnum_DrunkenDiscoPirates_States()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_DrunkenDiscoPirates();
		extern uint32 Get_Z_Construct_UEnum_DrunkenDiscoPirates_States_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("States"), 0, Get_Z_Construct_UEnum_DrunkenDiscoPirates_States_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("States"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("States::Idle")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("States::Walking")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("States::Running")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("States::JumpingStart")), 3));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("States::JumpingLoop")), 4));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("States::Attacking")), 5));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("States::Damaged")), 6));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("States::Stunned")), 7));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("States::JumpingAttacking")), 8));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("States::States_MAX")), 9));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("States");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("Category"), TEXT("Code"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("DiscoPirate.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Enumeration for the pirate states."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_DrunkenDiscoPirates_States_CRC() { return 3059908519U; }
	UFunction* Z_Construct_UFunction_ADiscoPirate_Attack()
	{
		struct DiscoPirate_eventAttack_Parms
		{
			AActor* attackingPirate;
		};
		UObject* Outer=Z_Construct_UClass_ADiscoPirate();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Attack"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(DiscoPirate_eventAttack_Parms));
			UProperty* NewProp_attackingPirate = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("attackingPirate"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(attackingPirate, DiscoPirate_eventAttack_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Code"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("DiscoPirate.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Called when the pirate gets attacked."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ADiscoPirate_DamagedFallback()
	{
		UObject* Outer=Z_Construct_UClass_ADiscoPirate();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("DamagedFallback"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08080800, 65535, sizeof(DiscoPirate_eventDamagedFallback_Parms));
			UProperty* NewProp_attackingPirate = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("attackingPirate"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(attackingPirate, DiscoPirate_eventDamagedFallback_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Code"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("DiscoPirate.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("//Call a blueprint timeline to simulate a fallback effect when damaged."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ADiscoPirate_InitiateAttack()
	{
		UObject* Outer=Z_Construct_UClass_ADiscoPirate();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("InitiateAttack"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Code"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("DiscoPirate.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Initiate an attack."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ADiscoPirate_InitiateJump()
	{
		UObject* Outer=Z_Construct_UClass_ADiscoPirate();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("InitiateJump"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Code"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("DiscoPirate.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Initiate a jump."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ADiscoPirate_MoveVertical()
	{
		struct DiscoPirate_eventMoveVertical_Parms
		{
			float value;
		};
		UObject* Outer=Z_Construct_UClass_ADiscoPirate();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MoveVertical"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(DiscoPirate_eventMoveVertical_Parms));
			UProperty* NewProp_value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("value"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(value, DiscoPirate_eventMoveVertical_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Code"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("DiscoPirate.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Move vertically."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ADiscoPirate_OnAnimationFinished()
	{
		UObject* Outer=Z_Construct_UClass_ADiscoPirate();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnAnimationFinished"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00040401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("DiscoPirate.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Called on animation finish."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ADiscoPirate_OnBeginOverlap()
	{
		struct DiscoPirate_eventOnBeginOverlap_Parms
		{
			UPrimitiveComponent* OverlappedComponent;
			AActor* OtherActor;
			UPrimitiveComponent* OtherComp;
			int32 OtherBodyIndex;
			bool bFromSweep;
			FHitResult SweepResult;
		};
		UObject* Outer=Z_Construct_UClass_ADiscoPirate();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnBeginOverlap"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00440401, 65535, sizeof(DiscoPirate_eventOnBeginOverlap_Parms));
			UProperty* NewProp_SweepResult = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SweepResult"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SweepResult, DiscoPirate_eventOnBeginOverlap_Parms), 0x0010008008000182, Z_Construct_UScriptStruct_FHitResult());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bFromSweep, DiscoPirate_eventOnBeginOverlap_Parms, bool);
			UProperty* NewProp_bFromSweep = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bFromSweep"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bFromSweep, DiscoPirate_eventOnBeginOverlap_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(bFromSweep, DiscoPirate_eventOnBeginOverlap_Parms), sizeof(bool), true);
			UProperty* NewProp_OtherBodyIndex = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OtherBodyIndex"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(OtherBodyIndex, DiscoPirate_eventOnBeginOverlap_Parms), 0x0010000000000080);
			UProperty* NewProp_OtherComp = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OtherComp"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(OtherComp, DiscoPirate_eventOnBeginOverlap_Parms), 0x0010000000080080, Z_Construct_UClass_UPrimitiveComponent_NoRegister());
			UProperty* NewProp_OtherActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OtherActor"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(OtherActor, DiscoPirate_eventOnBeginOverlap_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_OverlappedComponent = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OverlappedComponent"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(OverlappedComponent, DiscoPirate_eventOnBeginOverlap_Parms), 0x0010000000080080, Z_Construct_UClass_UPrimitiveComponent_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("DiscoPirate.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Called on begin overlap."));
			MetaData->SetValue(NewProp_SweepResult, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_OtherComp, TEXT("EditInline"), TEXT("true"));
			MetaData->SetValue(NewProp_OverlappedComponent, TEXT("EditInline"), TEXT("true"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ADiscoPirate_OnEndOverlap()
	{
		struct DiscoPirate_eventOnEndOverlap_Parms
		{
			UPrimitiveComponent* OverlappedComponent;
			AActor* OtherActor;
			UPrimitiveComponent* OtherComp;
			int32 OtherBodyIndex;
		};
		UObject* Outer=Z_Construct_UClass_ADiscoPirate();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnEndOverlap"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00040401, 65535, sizeof(DiscoPirate_eventOnEndOverlap_Parms));
			UProperty* NewProp_OtherBodyIndex = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OtherBodyIndex"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(OtherBodyIndex, DiscoPirate_eventOnEndOverlap_Parms), 0x0010000000000080);
			UProperty* NewProp_OtherComp = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OtherComp"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(OtherComp, DiscoPirate_eventOnEndOverlap_Parms), 0x0010000000080080, Z_Construct_UClass_UPrimitiveComponent_NoRegister());
			UProperty* NewProp_OtherActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OtherActor"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(OtherActor, DiscoPirate_eventOnEndOverlap_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_OverlappedComponent = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OverlappedComponent"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(OverlappedComponent, DiscoPirate_eventOnEndOverlap_Parms), 0x0010000000080080, Z_Construct_UClass_UPrimitiveComponent_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("DiscoPirate.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Called on end overlap."));
			MetaData->SetValue(NewProp_OtherComp, TEXT("EditInline"), TEXT("true"));
			MetaData->SetValue(NewProp_OverlappedComponent, TEXT("EditInline"), TEXT("true"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ADiscoPirate_OnKlunkAudioFinished()
	{
		UObject* Outer=Z_Construct_UClass_ADiscoPirate();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnKlunkAudioFinished"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00040401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("DiscoPirate.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Called on klunk audio finished."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ADiscoPirate_OnPickupBottleAudioFinished()
	{
		UObject* Outer=Z_Construct_UClass_ADiscoPirate();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnPickupBottleAudioFinished"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00040401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("DiscoPirate.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Called when the pickup bottle sound has finished playing."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ADiscoPirate_PickUpRum()
	{
		struct DiscoPirate_eventPickUpRum_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_ADiscoPirate();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PickUpRum"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(DiscoPirate_eventPickUpRum_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, DiscoPirate_eventPickUpRum_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, DiscoPirate_eventPickUpRum_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, DiscoPirate_eventPickUpRum_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Code"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("DiscoPirate.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Called when pirate has picked up rum."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ADiscoPirate_SetFlipbooks()
	{
		UObject* Outer=Z_Construct_UClass_ADiscoPirate();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetFlipbooks"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535, sizeof(DiscoPirate_eventSetFlipbooks_Parms));
			UProperty* NewProp_playerIndex = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("playerIndex"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(playerIndex, DiscoPirate_eventSetFlipbooks_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Code"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("DiscoPirate.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Blueprint implementable event of the set flipbooks function."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ADiscoPirate_SetFlipbooksImplementation()
	{
		struct DiscoPirate_eventSetFlipbooksImplementation_Parms
		{
			UPaperFlipbook* newIdleFlipbook;
			UPaperFlipbook* newWalkingFlipbook;
			UPaperFlipbook* newRunningFlipbook;
			UPaperFlipbook* newJumpingStartFlipbook;
			UPaperFlipbook* newJumpingLoopFlipbook;
			UPaperFlipbook* newAttackingFlipbook;
			UPaperFlipbook* newDamagedFlipbook;
			UPaperFlipbook* newIdleDrinkingFlipbook;
			UPaperFlipbook* newRunningDrinkingFlipbook;
			UPaperFlipbook* newJumpingStartDrinkingFlipbook;
			UPaperFlipbook* newJumpingLoopDrinkingFlipbook;
			UPaperFlipbook* newStunnedFlipbook;
			UPaperFlipbook* newJumpingAttackingFlipbook;
		};
		UObject* Outer=Z_Construct_UClass_ADiscoPirate();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetFlipbooksImplementation"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04080401, 65535, sizeof(DiscoPirate_eventSetFlipbooksImplementation_Parms));
			UProperty* NewProp_newJumpingAttackingFlipbook = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("newJumpingAttackingFlipbook"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(newJumpingAttackingFlipbook, DiscoPirate_eventSetFlipbooksImplementation_Parms), 0x0010000000000080, Z_Construct_UClass_UPaperFlipbook_NoRegister());
			UProperty* NewProp_newStunnedFlipbook = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("newStunnedFlipbook"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(newStunnedFlipbook, DiscoPirate_eventSetFlipbooksImplementation_Parms), 0x0010000000000080, Z_Construct_UClass_UPaperFlipbook_NoRegister());
			UProperty* NewProp_newJumpingLoopDrinkingFlipbook = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("newJumpingLoopDrinkingFlipbook"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(newJumpingLoopDrinkingFlipbook, DiscoPirate_eventSetFlipbooksImplementation_Parms), 0x0010000000000080, Z_Construct_UClass_UPaperFlipbook_NoRegister());
			UProperty* NewProp_newJumpingStartDrinkingFlipbook = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("newJumpingStartDrinkingFlipbook"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(newJumpingStartDrinkingFlipbook, DiscoPirate_eventSetFlipbooksImplementation_Parms), 0x0010000000000080, Z_Construct_UClass_UPaperFlipbook_NoRegister());
			UProperty* NewProp_newRunningDrinkingFlipbook = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("newRunningDrinkingFlipbook"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(newRunningDrinkingFlipbook, DiscoPirate_eventSetFlipbooksImplementation_Parms), 0x0010000000000080, Z_Construct_UClass_UPaperFlipbook_NoRegister());
			UProperty* NewProp_newIdleDrinkingFlipbook = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("newIdleDrinkingFlipbook"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(newIdleDrinkingFlipbook, DiscoPirate_eventSetFlipbooksImplementation_Parms), 0x0010000000000080, Z_Construct_UClass_UPaperFlipbook_NoRegister());
			UProperty* NewProp_newDamagedFlipbook = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("newDamagedFlipbook"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(newDamagedFlipbook, DiscoPirate_eventSetFlipbooksImplementation_Parms), 0x0010000000000080, Z_Construct_UClass_UPaperFlipbook_NoRegister());
			UProperty* NewProp_newAttackingFlipbook = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("newAttackingFlipbook"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(newAttackingFlipbook, DiscoPirate_eventSetFlipbooksImplementation_Parms), 0x0010000000000080, Z_Construct_UClass_UPaperFlipbook_NoRegister());
			UProperty* NewProp_newJumpingLoopFlipbook = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("newJumpingLoopFlipbook"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(newJumpingLoopFlipbook, DiscoPirate_eventSetFlipbooksImplementation_Parms), 0x0010000000000080, Z_Construct_UClass_UPaperFlipbook_NoRegister());
			UProperty* NewProp_newJumpingStartFlipbook = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("newJumpingStartFlipbook"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(newJumpingStartFlipbook, DiscoPirate_eventSetFlipbooksImplementation_Parms), 0x0010000000000080, Z_Construct_UClass_UPaperFlipbook_NoRegister());
			UProperty* NewProp_newRunningFlipbook = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("newRunningFlipbook"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(newRunningFlipbook, DiscoPirate_eventSetFlipbooksImplementation_Parms), 0x0010000000000080, Z_Construct_UClass_UPaperFlipbook_NoRegister());
			UProperty* NewProp_newWalkingFlipbook = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("newWalkingFlipbook"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(newWalkingFlipbook, DiscoPirate_eventSetFlipbooksImplementation_Parms), 0x0010000000000080, Z_Construct_UClass_UPaperFlipbook_NoRegister());
			UProperty* NewProp_newIdleFlipbook = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("newIdleFlipbook"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(newIdleFlipbook, DiscoPirate_eventSetFlipbooksImplementation_Parms), 0x0010000000000080, Z_Construct_UClass_UPaperFlipbook_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Code"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("DiscoPirate.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Sets the different flipbooks of this pirate."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_ADiscoPirate_NoRegister()
	{
		return ADiscoPirate::StaticClass();
	}
	UClass* Z_Construct_UClass_ADiscoPirate()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ACharacter();
			Z_Construct_UPackage__Script_DrunkenDiscoPirates();
			OuterClass = ADiscoPirate::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_ADiscoPirate_Attack());
				OuterClass->LinkChild(Z_Construct_UFunction_ADiscoPirate_DamagedFallback());
				OuterClass->LinkChild(Z_Construct_UFunction_ADiscoPirate_InitiateAttack());
				OuterClass->LinkChild(Z_Construct_UFunction_ADiscoPirate_InitiateJump());
				OuterClass->LinkChild(Z_Construct_UFunction_ADiscoPirate_MoveVertical());
				OuterClass->LinkChild(Z_Construct_UFunction_ADiscoPirate_OnAnimationFinished());
				OuterClass->LinkChild(Z_Construct_UFunction_ADiscoPirate_OnBeginOverlap());
				OuterClass->LinkChild(Z_Construct_UFunction_ADiscoPirate_OnEndOverlap());
				OuterClass->LinkChild(Z_Construct_UFunction_ADiscoPirate_OnKlunkAudioFinished());
				OuterClass->LinkChild(Z_Construct_UFunction_ADiscoPirate_OnPickupBottleAudioFinished());
				OuterClass->LinkChild(Z_Construct_UFunction_ADiscoPirate_PickUpRum());
				OuterClass->LinkChild(Z_Construct_UFunction_ADiscoPirate_SetFlipbooks());
				OuterClass->LinkChild(Z_Construct_UFunction_ADiscoPirate_SetFlipbooksImplementation());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_pickupBottleSound = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("pickupBottleSound"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(pickupBottleSound, ADiscoPirate), 0x0020080000000015, Z_Construct_UClass_USoundBase_NoRegister());
				UProperty* NewProp_skvalpSound = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("skvalpSound"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(skvalpSound, ADiscoPirate), 0x0020080000000015, Z_Construct_UClass_USoundBase_NoRegister());
				UProperty* NewProp_klunkSound = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("klunkSound"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(klunkSound, ADiscoPirate), 0x0020080000000015, Z_Construct_UClass_USoundBase_NoRegister());
				UProperty* NewProp_damagedSound = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("damagedSound"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(damagedSound, ADiscoPirate), 0x0020080000000015, Z_Construct_UClass_USoundBase_NoRegister());
				UProperty* NewProp_attackingSound = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("attackingSound"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(attackingSound, ADiscoPirate), 0x0020080000000015, Z_Construct_UClass_USoundBase_NoRegister());
				UProperty* NewProp_jumpingSound = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("jumpingSound"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(jumpingSound, ADiscoPirate), 0x0020080000000015, Z_Construct_UClass_USoundBase_NoRegister());
				UProperty* NewProp_jumpingAttackingFlipbook = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("jumpingAttackingFlipbook"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(jumpingAttackingFlipbook, ADiscoPirate), 0x0020080000000015, Z_Construct_UClass_UPaperFlipbook_NoRegister());
				UProperty* NewProp_stunnedFlipbook = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("stunnedFlipbook"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(stunnedFlipbook, ADiscoPirate), 0x0020080000000015, Z_Construct_UClass_UPaperFlipbook_NoRegister());
				UProperty* NewProp_jumpingLoopDrinkingFlipbook = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("jumpingLoopDrinkingFlipbook"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(jumpingLoopDrinkingFlipbook, ADiscoPirate), 0x0020080000000015, Z_Construct_UClass_UPaperFlipbook_NoRegister());
				UProperty* NewProp_jumpingStartDrinkingFlipbook = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("jumpingStartDrinkingFlipbook"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(jumpingStartDrinkingFlipbook, ADiscoPirate), 0x0020080000000015, Z_Construct_UClass_UPaperFlipbook_NoRegister());
				UProperty* NewProp_runningDrinkingFlipbook = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("runningDrinkingFlipbook"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(runningDrinkingFlipbook, ADiscoPirate), 0x0020080000000015, Z_Construct_UClass_UPaperFlipbook_NoRegister());
				UProperty* NewProp_idleDrinkingFlipbook = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("idleDrinkingFlipbook"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(idleDrinkingFlipbook, ADiscoPirate), 0x0020080000000015, Z_Construct_UClass_UPaperFlipbook_NoRegister());
				UProperty* NewProp_damagedFlipbook = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("damagedFlipbook"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(damagedFlipbook, ADiscoPirate), 0x0020080000000015, Z_Construct_UClass_UPaperFlipbook_NoRegister());
				UProperty* NewProp_attackingFlipbook = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("attackingFlipbook"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(attackingFlipbook, ADiscoPirate), 0x0020080000000015, Z_Construct_UClass_UPaperFlipbook_NoRegister());
				UProperty* NewProp_jumpingLoopFlipbook = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("jumpingLoopFlipbook"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(jumpingLoopFlipbook, ADiscoPirate), 0x0020080000000015, Z_Construct_UClass_UPaperFlipbook_NoRegister());
				UProperty* NewProp_jumpingStartFlipbook = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("jumpingStartFlipbook"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(jumpingStartFlipbook, ADiscoPirate), 0x0020080000000015, Z_Construct_UClass_UPaperFlipbook_NoRegister());
				UProperty* NewProp_runningFlipbook = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("runningFlipbook"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(runningFlipbook, ADiscoPirate), 0x0020080000000015, Z_Construct_UClass_UPaperFlipbook_NoRegister());
				UProperty* NewProp_walkingFlipbook = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("walkingFlipbook"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(walkingFlipbook, ADiscoPirate), 0x0020080000000015, Z_Construct_UClass_UPaperFlipbook_NoRegister());
				UProperty* NewProp_idleFlipbook = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("idleFlipbook"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(idleFlipbook, ADiscoPirate), 0x0020080000000015, Z_Construct_UClass_UPaperFlipbook_NoRegister());
				UProperty* NewProp_levelZBoundary = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("levelZBoundary"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(levelZBoundary, ADiscoPirate), 0x0020080000000015);
				UProperty* NewProp_levelYBoundary = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("levelYBoundary"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(levelYBoundary, ADiscoPirate), 0x0020080000000015);
				UProperty* NewProp_rumBottleClass = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("rumBottleClass"), RF_Public|RF_Transient|RF_MarkAsNative) UClassProperty(CPP_PROPERTY_BASE(rumBottleClass, ADiscoPirate), 0x0024080000000015, Z_Construct_UClass_ARumBottle_NoRegister(), UClass::StaticClass());
				UProperty* NewProp_attackBox = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("attackBox"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(attackBox, ADiscoPirate), 0x00400000000a001d, Z_Construct_UClass_UBoxComponent_NoRegister());
				UProperty* NewProp_flipbook = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("flipbook"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(flipbook, ADiscoPirate), 0x00400000000a001d, Z_Construct_UClass_UPaperFlipbookComponent_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ADiscoPirate_Attack(), "Attack"); // 1708424139
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ADiscoPirate_DamagedFallback(), "DamagedFallback"); // 1040536844
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ADiscoPirate_InitiateAttack(), "InitiateAttack"); // 3989609359
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ADiscoPirate_InitiateJump(), "InitiateJump"); // 3536455539
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ADiscoPirate_MoveVertical(), "MoveVertical"); // 2247390805
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ADiscoPirate_OnAnimationFinished(), "OnAnimationFinished"); // 580161796
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ADiscoPirate_OnBeginOverlap(), "OnBeginOverlap"); // 3794176916
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ADiscoPirate_OnEndOverlap(), "OnEndOverlap"); // 3250412170
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ADiscoPirate_OnKlunkAudioFinished(), "OnKlunkAudioFinished"); // 1839946553
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ADiscoPirate_OnPickupBottleAudioFinished(), "OnPickupBottleAudioFinished"); // 3389319544
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ADiscoPirate_PickUpRum(), "PickUpRum"); // 1057884094
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ADiscoPirate_SetFlipbooks(), "SetFlipbooks"); // 1983660817
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ADiscoPirate_SetFlipbooksImplementation(), "SetFlipbooksImplementation"); // 296142119
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Navigation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("DiscoPirate.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("DiscoPirate.h"));
				MetaData->SetValue(NewProp_pickupBottleSound, TEXT("Category"), TEXT("Sounds"));
				MetaData->SetValue(NewProp_pickupBottleSound, TEXT("ModuleRelativePath"), TEXT("DiscoPirate.h"));
				MetaData->SetValue(NewProp_pickupBottleSound, TEXT("ToolTip"), TEXT("Reference to the pickup bottle sound."));
				MetaData->SetValue(NewProp_skvalpSound, TEXT("Category"), TEXT("Sounds"));
				MetaData->SetValue(NewProp_skvalpSound, TEXT("ModuleRelativePath"), TEXT("DiscoPirate.h"));
				MetaData->SetValue(NewProp_skvalpSound, TEXT("ToolTip"), TEXT("Reference to the skvalp sound."));
				MetaData->SetValue(NewProp_klunkSound, TEXT("Category"), TEXT("Sounds"));
				MetaData->SetValue(NewProp_klunkSound, TEXT("ModuleRelativePath"), TEXT("DiscoPirate.h"));
				MetaData->SetValue(NewProp_klunkSound, TEXT("ToolTip"), TEXT("Reference to the klunk sound."));
				MetaData->SetValue(NewProp_damagedSound, TEXT("Category"), TEXT("Sounds"));
				MetaData->SetValue(NewProp_damagedSound, TEXT("ModuleRelativePath"), TEXT("DiscoPirate.h"));
				MetaData->SetValue(NewProp_damagedSound, TEXT("ToolTip"), TEXT("Reference to the damaged sound."));
				MetaData->SetValue(NewProp_attackingSound, TEXT("Category"), TEXT("Sounds"));
				MetaData->SetValue(NewProp_attackingSound, TEXT("ModuleRelativePath"), TEXT("DiscoPirate.h"));
				MetaData->SetValue(NewProp_attackingSound, TEXT("ToolTip"), TEXT("Reference to the attacking sound."));
				MetaData->SetValue(NewProp_jumpingSound, TEXT("Category"), TEXT("Sounds"));
				MetaData->SetValue(NewProp_jumpingSound, TEXT("ModuleRelativePath"), TEXT("DiscoPirate.h"));
				MetaData->SetValue(NewProp_jumpingSound, TEXT("ToolTip"), TEXT("Reference to the jumping sound."));
				MetaData->SetValue(NewProp_jumpingAttackingFlipbook, TEXT("Category"), TEXT("Flipbooks"));
				MetaData->SetValue(NewProp_jumpingAttackingFlipbook, TEXT("ModuleRelativePath"), TEXT("DiscoPirate.h"));
				MetaData->SetValue(NewProp_jumpingAttackingFlipbook, TEXT("ToolTip"), TEXT("Reference to the jumping attacking flipbook."));
				MetaData->SetValue(NewProp_stunnedFlipbook, TEXT("Category"), TEXT("Flipbooks"));
				MetaData->SetValue(NewProp_stunnedFlipbook, TEXT("ModuleRelativePath"), TEXT("DiscoPirate.h"));
				MetaData->SetValue(NewProp_stunnedFlipbook, TEXT("ToolTip"), TEXT("Reference to the stunned flipbook."));
				MetaData->SetValue(NewProp_jumpingLoopDrinkingFlipbook, TEXT("Category"), TEXT("Flipbooks"));
				MetaData->SetValue(NewProp_jumpingLoopDrinkingFlipbook, TEXT("ModuleRelativePath"), TEXT("DiscoPirate.h"));
				MetaData->SetValue(NewProp_jumpingLoopDrinkingFlipbook, TEXT("ToolTip"), TEXT("Reference to the jumping loop drinking flipbook."));
				MetaData->SetValue(NewProp_jumpingStartDrinkingFlipbook, TEXT("Category"), TEXT("Flipbooks"));
				MetaData->SetValue(NewProp_jumpingStartDrinkingFlipbook, TEXT("ModuleRelativePath"), TEXT("DiscoPirate.h"));
				MetaData->SetValue(NewProp_jumpingStartDrinkingFlipbook, TEXT("ToolTip"), TEXT("Reference to the jumping start drinking flipbook."));
				MetaData->SetValue(NewProp_runningDrinkingFlipbook, TEXT("Category"), TEXT("Flipbooks"));
				MetaData->SetValue(NewProp_runningDrinkingFlipbook, TEXT("ModuleRelativePath"), TEXT("DiscoPirate.h"));
				MetaData->SetValue(NewProp_runningDrinkingFlipbook, TEXT("ToolTip"), TEXT("Reference to the running drinking flipbook."));
				MetaData->SetValue(NewProp_idleDrinkingFlipbook, TEXT("Category"), TEXT("Flipbooks"));
				MetaData->SetValue(NewProp_idleDrinkingFlipbook, TEXT("ModuleRelativePath"), TEXT("DiscoPirate.h"));
				MetaData->SetValue(NewProp_idleDrinkingFlipbook, TEXT("ToolTip"), TEXT("Reference to the idle drinking flipbook."));
				MetaData->SetValue(NewProp_damagedFlipbook, TEXT("Category"), TEXT("Flipbooks"));
				MetaData->SetValue(NewProp_damagedFlipbook, TEXT("ModuleRelativePath"), TEXT("DiscoPirate.h"));
				MetaData->SetValue(NewProp_damagedFlipbook, TEXT("ToolTip"), TEXT("Reference to the damaged flipbook."));
				MetaData->SetValue(NewProp_attackingFlipbook, TEXT("Category"), TEXT("Flipbooks"));
				MetaData->SetValue(NewProp_attackingFlipbook, TEXT("ModuleRelativePath"), TEXT("DiscoPirate.h"));
				MetaData->SetValue(NewProp_attackingFlipbook, TEXT("ToolTip"), TEXT("Reference to the attacking flipbook."));
				MetaData->SetValue(NewProp_jumpingLoopFlipbook, TEXT("Category"), TEXT("Flipbooks"));
				MetaData->SetValue(NewProp_jumpingLoopFlipbook, TEXT("ModuleRelativePath"), TEXT("DiscoPirate.h"));
				MetaData->SetValue(NewProp_jumpingLoopFlipbook, TEXT("ToolTip"), TEXT("Reference to the jumping loop flipbook."));
				MetaData->SetValue(NewProp_jumpingStartFlipbook, TEXT("Category"), TEXT("Flipbooks"));
				MetaData->SetValue(NewProp_jumpingStartFlipbook, TEXT("ModuleRelativePath"), TEXT("DiscoPirate.h"));
				MetaData->SetValue(NewProp_jumpingStartFlipbook, TEXT("ToolTip"), TEXT("Reference to the jumping start flipbook."));
				MetaData->SetValue(NewProp_runningFlipbook, TEXT("Category"), TEXT("Flipbooks"));
				MetaData->SetValue(NewProp_runningFlipbook, TEXT("ModuleRelativePath"), TEXT("DiscoPirate.h"));
				MetaData->SetValue(NewProp_runningFlipbook, TEXT("ToolTip"), TEXT("Reference to the running flipbook."));
				MetaData->SetValue(NewProp_walkingFlipbook, TEXT("Category"), TEXT("Flipbooks"));
				MetaData->SetValue(NewProp_walkingFlipbook, TEXT("ModuleRelativePath"), TEXT("DiscoPirate.h"));
				MetaData->SetValue(NewProp_walkingFlipbook, TEXT("ToolTip"), TEXT("Reference to the walking flipbook."));
				MetaData->SetValue(NewProp_idleFlipbook, TEXT("Category"), TEXT("Flipbooks"));
				MetaData->SetValue(NewProp_idleFlipbook, TEXT("ModuleRelativePath"), TEXT("DiscoPirate.h"));
				MetaData->SetValue(NewProp_idleFlipbook, TEXT("ToolTip"), TEXT("Reference to the idle flipbook."));
				MetaData->SetValue(NewProp_levelZBoundary, TEXT("Category"), TEXT("Code"));
				MetaData->SetValue(NewProp_levelZBoundary, TEXT("ModuleRelativePath"), TEXT("DiscoPirate.h"));
				MetaData->SetValue(NewProp_levelZBoundary, TEXT("ToolTip"), TEXT("The level Z boundary."));
				MetaData->SetValue(NewProp_levelYBoundary, TEXT("Category"), TEXT("Code"));
				MetaData->SetValue(NewProp_levelYBoundary, TEXT("ModuleRelativePath"), TEXT("DiscoPirate.h"));
				MetaData->SetValue(NewProp_levelYBoundary, TEXT("ToolTip"), TEXT("The level Y boundary."));
				MetaData->SetValue(NewProp_rumBottleClass, TEXT("Category"), TEXT("Code"));
				MetaData->SetValue(NewProp_rumBottleClass, TEXT("ModuleRelativePath"), TEXT("DiscoPirate.h"));
				MetaData->SetValue(NewProp_rumBottleClass, TEXT("ToolTip"), TEXT("Reference to the skvalp sound."));
				MetaData->SetValue(NewProp_attackBox, TEXT("AllowPrivateAccess"), TEXT("TRUE"));
				MetaData->SetValue(NewProp_attackBox, TEXT("Category"), TEXT("Components"));
				MetaData->SetValue(NewProp_attackBox, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_attackBox, TEXT("ModuleRelativePath"), TEXT("DiscoPirate.h"));
				MetaData->SetValue(NewProp_attackBox, TEXT("ToolTip"), TEXT("The box collision component (used for melee attacks)."));
				MetaData->SetValue(NewProp_flipbook, TEXT("AllowPrivateAccess"), TEXT("TRUE"));
				MetaData->SetValue(NewProp_flipbook, TEXT("Category"), TEXT("Components"));
				MetaData->SetValue(NewProp_flipbook, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_flipbook, TEXT("ModuleRelativePath"), TEXT("DiscoPirate.h"));
				MetaData->SetValue(NewProp_flipbook, TEXT("ToolTip"), TEXT("The paper flipbook component."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ADiscoPirate(Z_Construct_UClass_ADiscoPirate, &ADiscoPirate::StaticClass, TEXT("ADiscoPirate"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(ADiscoPirate);
	UFunction* Z_Construct_UFunction_ADDPGameMode_CreatePlayers()
	{
		UObject* Outer=Z_Construct_UClass_ADDPGameMode();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CreatePlayers"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Code"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("DDPGameMode.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Create players."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_ADDPGameMode_NoRegister()
	{
		return ADDPGameMode::StaticClass();
	}
	UClass* Z_Construct_UClass_ADDPGameMode()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AGameMode();
			Z_Construct_UPackage__Script_DrunkenDiscoPirates();
			OuterClass = ADDPGameMode::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2090028C;

				OuterClass->LinkChild(Z_Construct_UFunction_ADDPGameMode_CreatePlayers());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_playerTransforms = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("playerTransforms"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(playerTransforms, ADDPGameMode), 0x0020080000000015);
				UProperty* NewProp_playerTransforms_Inner = new(EC_InternalUseOnlyConstructor, NewProp_playerTransforms, TEXT("playerTransforms"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FTransform());
				UProperty* NewProp_playerCount = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("playerCount"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(playerCount, ADDPGameMode), 0x0020080000000015);
				UProperty* NewProp_discoPirateClass = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("discoPirateClass"), RF_Public|RF_Transient|RF_MarkAsNative) UClassProperty(CPP_PROPERTY_BASE(discoPirateClass, ADDPGameMode), 0x0024080000000015, Z_Construct_UClass_ADiscoPirate_NoRegister(), UClass::StaticClass());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ADDPGameMode_CreatePlayers(), "CreatePlayers"); // 3478414986
				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Info Rendering MovementReplication Replication Actor Input Movement Collision Rendering Utilities|Transformation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("DDPGameMode.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("DDPGameMode.h"));
				MetaData->SetValue(OuterClass, TEXT("ShowCategories"), TEXT("Input|MouseInput Input|TouchInput"));
				MetaData->SetValue(NewProp_playerTransforms, TEXT("Category"), TEXT("DDPGameMode"));
				MetaData->SetValue(NewProp_playerTransforms, TEXT("ModuleRelativePath"), TEXT("DDPGameMode.h"));
				MetaData->SetValue(NewProp_playerTransforms, TEXT("ToolTip"), TEXT("Array of transforms for the different players."));
				MetaData->SetValue(NewProp_playerCount, TEXT("Category"), TEXT("DDPGameMode"));
				MetaData->SetValue(NewProp_playerCount, TEXT("ModuleRelativePath"), TEXT("DDPGameMode.h"));
				MetaData->SetValue(NewProp_playerCount, TEXT("ToolTip"), TEXT("Number of players."));
				MetaData->SetValue(NewProp_discoPirateClass, TEXT("Category"), TEXT("DDPGameMode"));
				MetaData->SetValue(NewProp_discoPirateClass, TEXT("ModuleRelativePath"), TEXT("DDPGameMode.h"));
				MetaData->SetValue(NewProp_discoPirateClass, TEXT("ToolTip"), TEXT("Reference to the disco pirate class."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ADDPGameMode(Z_Construct_UClass_ADDPGameMode, &ADDPGameMode::StaticClass, TEXT("ADDPGameMode"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(ADDPGameMode);
	UClass* Z_Construct_UClass_ADrunkenDiscoPiratesGameModeBase_NoRegister()
	{
		return ADrunkenDiscoPiratesGameModeBase::StaticClass();
	}
	UClass* Z_Construct_UClass_ADrunkenDiscoPiratesGameModeBase()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AGameModeBase();
			Z_Construct_UPackage__Script_DrunkenDiscoPirates();
			OuterClass = ADrunkenDiscoPiratesGameModeBase::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900288;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Info Rendering MovementReplication Replication Actor Input Movement Collision Rendering Utilities|Transformation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("DrunkenDiscoPiratesGameModeBase.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("DrunkenDiscoPiratesGameModeBase.h"));
				MetaData->SetValue(OuterClass, TEXT("ShowCategories"), TEXT("Input|MouseInput Input|TouchInput"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ADrunkenDiscoPiratesGameModeBase(Z_Construct_UClass_ADrunkenDiscoPiratesGameModeBase, &ADrunkenDiscoPiratesGameModeBase::StaticClass, TEXT("ADrunkenDiscoPiratesGameModeBase"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(ADrunkenDiscoPiratesGameModeBase);
	UPackage* Z_Construct_UPackage__Script_DrunkenDiscoPirates()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/DrunkenDiscoPirates")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0x4B03427F;
			Guid.B = 0xEE4F642B;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
